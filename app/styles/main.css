#iBody {
    background: url('../images/blur2.jpg') no-repeat center fixed;
}

#footer {
    bottom: 0;
    z-index: -1;
    color: #ffffff;
    text-align: center;
}

.white {
    color: white;
}

.main-button {
    width: 200px;
    height: auto;
    vertical-align: middle;
}

.aligned {
    text-align: center;
}

.alignedDi{
    text-align: center;
    display: inline-block;
    float: none;
}

.aligned100{
    text-align: center;
    width: 100%;
}

.smallW{
    width: 150px;
}

.posts{
    width: 500px;
    height: auto;
}

.label{
    font-family: 'Open Sans', sans-serif;
}

.height{
    height: auto;
}

.jumboHeight{
    padding-top:1px !important;
}

.fR{
    float:right;
}

.fL{
    float:left;
}

.hbo{
    background-color: #000000;
    color:#ffffff;
}


.newClass{
    margin-left: auto !important;
    margin-right: auto !important;
    width:75% !important;
}

.heighthv{
    min-height: 100vh;
}

.repeated-item {
    opacity: 1;
    min-width: 300px;
}

.repeated-item.ng-hide {
    opacity: 0;
}

.repeated-item.ng-hide-add,
.repeated-item.ng-hide-remove {
    -webkit-transition: 0.5s linear all;
    transition: 0.5s linear all;
}

/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .repeated-item
  class
*/
.repeated-item.ng-enter, .repeated-item.ng-move {
    -webkit-transition:0.5s linear all;
    -moz-transition:0.5s linear all;
    -o-transition:0.5s linear all;
    transition:0.5s linear all;
    opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated-item.ng-enter.ng-enter-active,
.repeated-item.ng-move.ng-move-active {
    opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated-item class
*/
.repeated-item.ng-leave {
    -webkit-animation:0.5s my_animation;
    -moz-animation:0.5s my_animation;
    -o-animation:0.5s my_animation;
    animation:0.5s my_animation;
}

@keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-moz-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-o-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}


.repeated-items {
    opacity: 1;
}

/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .repeated-item
  class
*/
.repeated-items.ng-enter {
    -webkit-transition:0.5s linear all;
    -moz-transition:0.5s linear all;
    -o-transition:0.5s linear all;
    transition:0.5s linear all;
    opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated-items.ng-enter{
    opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated-item class
*/
.repeated-items{
    -webkit-animation:0.5s my_animation;
    -moz-animation:0.5s my_animation;
    -o-animation:0.5s my_animation;
    animation:0.5s my_animation;
}

@keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-moz-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-o-keyframes my_animation {
    from { opacity:1; }
    to { opacity:0; }
}

.animated.ng-enter-stagger {
    transition-delay: 0.3s;
    animation-delay: 0.3s;
}

.spec{
    width:65px;
    height:auto;
    float:left;
}
@media only screen and (max-width: 480px) {
    .spec{
        width:100px;
        height:auto;
        float:none;
    }

    .repeated-item {
        opacity: 1;
        min-width: 0;
    }

}

.btn-circle {
    width: 30px;
    height: 30px;
    text-align: center;
    padding: 6px 0;
    font-size: 12px;
    line-height: 1.42;
    border-radius: 15px;
}